# equie Join

select * 
from orders, subscriptions 
where orders.subscription_id = subscriptions.subscription_id;

# equie Join With some conditions

select * 
from orders, subscriptions 
where orders.subscription_id = subscriptions.subscription_id 
AND subscriptions.description = 'Fashion Magazine';

#Something on Inner Join

SELECT COUNT(*)
FROM newspaper;

SELECT COUNT(*)
FROM online;

select count(distinct newspaper.id) 
from newspaper, online
where newspaper.id = online.id;

select *
from classes, students
where classes.id = students.class_id;

#left join

select * 
from newspaper
left join online
on newspaper.id = online.id;

select * 
from newspaper
left join online
on newspaper.id = online.id 
where online.id IS NULL;


#Cross JOin
select count(*)
from newspaper
where start_month <= 3 AND end_month >= 3;

select * 
from newspaper 
Cross join months;

select * 
from newspaper 
Cross join months
where start_month <= month AND end_month >= month;

SELECT month,
  COUNT(*)
FROM newspaper
CROSS JOIN months
WHERE start_month <= month AND end_month >= month
GROUP BY month;

#Using with

WITH previous_query AS (
   SELECT customer_id,
      COUNT(subscription_id) AS 'subscriptions'
   FROM orders
   GROUP BY customer_id
)
SELECT customers.customer_name, 
   previous_query.subscriptions
FROM previous_query
JOIN customers
  ON previous_query.customer_id = customers.customer_id;
  

select user_id,description
from premium_users, plans
where plans.id = premium_users.membership_plan_id;

SELECT plays.user_id,
   plays.play_date,
   songs.title
FROM plays
JOIN songs
  ON plays.song_id = songs.id;
  
  SELECT users.id
FROM users
LEFT JOIN premium_users
	ON users.id = premium_users.user_id
WHERE premium_users.user_id IS NULL;


WITH january AS (
  SELECT *
  FROM plays
  WHERE strftime("%m", play_date) = '01'
),
february AS (
  SELECT *
  FROM plays
  WHERE strftime("%m", play_date) = '02'

)
select january.user_id 
from january
left join february
on january.user_id = february.user_id
WHERE february.user_id IS NULL;



select premium_users.user_id, premium_users.purchase_date, premium_users.cancel_date, months.months 
from premium_users
cross join months;


SELECT premium_users.user_id,
  months.months,
  CASE
    WHEN (
      premium_users.purchase_date <= months.months
      )
      AND
      (
        premium_users.cancel_date >= months.months
        OR
        premium_users.cancel_date IS NULL
      )
    THEN 'active'
    ELSE 'not_active'
  END AS 'status'
FROM premium_users
CROSS JOIN months;


SELECT *
FROM songs
UNION
SELECT * 
FROM bonus_songs
LIMIT 10;

SELECT '2017-01-01' as month
UNION
SELECT '2017-02-01' as month
UNION
SELECT '2017-03-01' as month;
